[module template_nonstdlib('http://www.eclipse.org/emf/2002/Ecore')/]

[template public test_nonstdlib(p : EPackage)]
	[file ('test_string_replace', false)]
		[if ('test'.replace('(t)(?x) e s (?-x)(t)', '$1se$2') = 'tset')]constant output[/if]
	[/file]
	[file ('test_string_replaceAll', false)]
		[if ('aardvark'.replaceAll('[aeiou]', 'x') = 'xxrdvxrk')]constant output[/if]
	[/file]
	[file ('test_string_substituteAll', false)]
		[if ('\\$1...*$?'.substituteAll('$', 'x') = '\\x1...*x?')]constant output[/if]
	[/file]
	[file ('test_string_startsWith', false)]
		[if ('test'.startsWith('te') and not 'test'.startsWith('es'))]constant output[/if]
	[/file]
	[file ('test_string_endsWith', false)]
		[if ('test'.endsWith('st') and not 'test'.endsWith('es'))]constant output[/if]
	[/file]
	[file ('test_string_trim', false)]
		[if ('          t   e s       t       '.trim() = 't   e s       t')]constant output[/if]
	[/file]
	[file ('test_string_tokenize', false)]
		[if ('this is a test sentence'.tokenize(' ')->includesAll(Sequence{'this', 'is', 'a', 'test', 'sentence'}))]constant output[/if]
	[/file]
	[file ('test_string_contains', false)]
		[if ('test'.contains('es') and not 'test'.contains('ests'))]constant output[/if]
	[/file]
	[file ('test_oclany_eAllContents', false)]
		[if (not p.eAllContents()->isEmpty() and p.eAllContents()->select(oclIsKindOf(EClass)).oclAsType(EClass).name->includesAll(Sequence{'ClasseA', 'ClasseB', 'AbstractClass'}))]constant output[/if]
	[/file]
	[file ('test_oclany_typed_eAllContents', false)]
		[if (p.eAllContents(EClass).name->includesAll(Sequence{'ClasseA', 'ClasseB', 'AbstractClass'}))]constant output[/if]
	[/file]
	[file ('test_oclany_ancestors', false)]
		[if (p.eAllContents()->first().ancestors()->includes(p))]constant output[/if]
	[/file]
	[file ('test_oclany_typed_ancestors', false)]
		[if (p.eAllContents()->first().ancestors(EClass)->isEmpty() and p.eAllContents()->first().ancestors(EPackage)->includes(p))]constant output[/if]
	[/file]
	[file ('test_oclany_siblings', false)]
		[if (p.eAllContents()->first().siblings().oclAsType(EClass).name->includesAll(Sequence{'ClasseB', 'AbstractClass'}))]constant output[/if]
	[/file]
	[file ('test_oclany_typed_siblings', false)]
		[if (p.eAllContents()->first().siblings(EPackage)->isEmpty() and p.eAllContents()->first().siblings(EClass).name->includesAll(Sequence{'ClasseB', 'AbstractClass'}))]constant output[/if]
	[/file]
	[file ('test_oclany_eInverse', false)]
		[if (p.eAllContents()->first().eInverse()->includes(p.eAllContents()->first().siblings()->select(oclIsKindOf(EClass)).oclAsType(EClass)->first().eReferences->first()))]constant output[/if]
	[/file]
	[file ('test_oclany_typed_eInverse', false)]
		[if (p.eAllContents()->first().eInverse(EReference)->includes(p.eAllContents()->first().siblings(EClass)->first().eReferences->first()))]constant output[/if]
	[/file]
	[file ('test_oclany_toString', false)]
		[if (p.toString().contains(p.name))]constant output[/if]
	[/file]
	[file ('test_oclany_invoke', false)]
		[if (invoke('this.is.an.unknown.Object', 'method()', Sequence{p}).oclIsInvalid() and invoke('java.lang.Object', 'unknownMethod()', Sequence{p}).oclIsInvalid() and invoke('java.lang.Object', 'toString', Sequence{p}).oclAsType(String).contains('arge'))]constant output[/if]
	[/file]
[/template]